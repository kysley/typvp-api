type Account {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  email: String! @unique
  username: String! @unique
  password: String!
  results: [Test!] @relation(name: "UsersTests")
  role: Role!
}

type Test {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  cpm: Int!
  rawCpm: Int!
  wpm: Int!
  correct: Int!
  incorrect: Int!
  corrections: Int!
  account: Account! @relation(name: "UsersTests")
}

type Race {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  # leader: Account! @relation(name: "RaceLeader")
  players: [Account!]! @relation(name: "PlayersInRace")
  raceState: RaceState!
  room: Room!
  wordSet: String!
}

type Room {
  id: ID! @id
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
  roomState: RoomState!
  race: Race! @relation(link: INLINE)
  roomHost: ID
}

enum Role {
  USER
  ADMIN
}

enum RoomState {
  IDLE
  FULL
  AWAITING
  BUSY
}

enum RaceState {
  IN_PROGRESS
  AWAITING
  COUNTDOWN
  FINISHED
}
