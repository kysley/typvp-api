generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

generator typegraphql {
  provider = "node_modules/typegraphql-prisma/generator.js"
  output = "../src/generated/type-graphql"
}

model Account {
  color             String?
  confirmed         Boolean   @default(false)
  createdAt         DateTime  @default(now())
  email             String    @unique
  id                String    @id @default(cuid())
  lastPlayed        String?
  lastSeen          DateTime  @default(now())
  password          String
  role              Role      @default(USER)
  updatedAt         DateTime  @default(now())
  username          String    @unique
  usernameLowercase String?   @unique
  Test              Test[]
  Trial             Trial[]
}

model Test {
  account     String
  correct     Int
  corrections Int
  cpm         Int
  createdAt   DateTime   @default(now())
  id          String     @id @default(cuid())
  incorrect   Int
  rawCpm      Int
  type        ResultType
  updatedAt   DateTime   @default(now())
  wordIndex   Int
  wpm         Int
  trial       String?
  Account     Account    @relation(fields: [account], references: [id])
  Trial       Trial?     @relation(fields: [trial], references: [id])
}

model Trial {
  createdAt     DateTime    @default(now())
  custom        Boolean?    @default(false)
  difficulty    Difficulty?
  id            String      @id @default(cuid())
  maxWordLength Int?
  minWordLength Int?
  name          String
  owner         String?
  private       Boolean?    @default(false)
  updatedAt     DateTime    @default(now())
  wordSet       String
  results       Trial[]
  Account       Account?    @relation(fields: [owner], references: [id])
}

enum ResultType {
  SINGLEPLAYER
  RACE
  TRIAL
}

enum Difficulty {
  EASY
  NORMAL
  MEDIUM
  HARD
}

enum Role {
  USER
  ADMIN
  PRO
  BETA
}

